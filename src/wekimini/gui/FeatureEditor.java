/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wekimini.gui;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import javax.swing.JComponent;
import javax.swing.JSlider;
import javax.swing.JToggleButton;
import wekimini.ConnectsInputsToOutputs.InputOutputConnectionsListener;
import wekimini.Wekinator;
import wekimini.kadenze.KadenzeLogging;

/**
 *
 * @author rebecca
 */
public class FeatureEditor extends javax.swing.JFrame {
    private Wekinator w;
    private LabeledButtonGridPanel gridPanel;
    int windowSize = 0;
    
    public FeatureEditor(Wekinator w) {
        initComponents();
        this.w = w;
        setup(w.getDataManager().featureManager.getFeatureNames(),
                w.getOutputManager().getOutputGroup().getOutputNames(),
                w.getLearningManager().getConnectionMatrix(true));
        w.getLearningManager().addConnectionsListener(new InputOutputConnectionsListener() {

            @Override
            public void newConnectionMatrix(boolean[][] connections) {
                gridPanel.setNewOriginal(connections);
            }
        }, true);
        
        this.setPreferredSize(new Dimension(400, 800));
        setSize(new Dimension(400, 800));

    }

    private void setup(String[] rowNames, String[] colNames, boolean[][] enabled) {

        int numRows = rowNames.length;
        int numCols = colNames.length;
        if (enabled == null || rowNames.length == 0 || enabled.length != rowNames.length || enabled[0] == null || enabled[0].length != colNames.length) {
            throw new IllegalArgumentException("Dimensions of enabled must match dimensions of row/column names");
        } 

        gridPanel = new LabeledButtonGridPanel(rowNames, colNames, enabled);
        scrollPanel.setViewportView(gridPanel);
        windowSize = w.getDataManager().featureManager.getFeatureWindowSize();
        windowSizeSlider.setValue(windowSize);
        windowSizeLabel.setText(Integer.toString(windowSize));
        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenuAction = new javax.swing.JPopupMenu();
        menuItemRevert = new javax.swing.JMenuItem();
        menuItemEnableAll = new javax.swing.JMenuItem();
        menuItemDisableAll = new javax.swing.JMenuItem();
        jPanel2 = new javax.swing.JPanel();
        scrollPanel = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        windowSizeSlider = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        windowSizeLabel = new javax.swing.JLabel();
        setFeaturesButton = new javax.swing.JButton();

        menuItemRevert.setText("Revert all changes");
        menuItemRevert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemRevertActionPerformed(evt);
            }
        });
        popupMenuAction.add(menuItemRevert);

        menuItemEnableAll.setText("Connect all");
        menuItemEnableAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemEnableAllActionPerformed(evt);
            }
        });
        popupMenuAction.add(menuItemEnableAll);

        menuItemDisableAll.setText("Disconnect all");
        menuItemDisableAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemDisableAllActionPerformed(evt);
            }
        });
        popupMenuAction.add(menuItemDisableAll);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        scrollPanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        scrollPanel.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 453, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 264, Short.MAX_VALUE)
        );

        scrollPanel.setViewportView(jPanel1);

        jLabel5.setText("<html>An \"X\" means that the value of the output corresponding to the column will be influenced by the value of the input corresponding to the row.</html>");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPanel)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Actions...");
        jButton1.setComponentPopupMenu(popupMenuAction);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        windowSizeSlider.setMajorTickSpacing(5);
        windowSizeSlider.setMinimum(1);
        windowSizeSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                windowSizeSliderStateChanged(evt);
            }
        });

        jLabel1.setText("Buffer Size:");

        windowSizeLabel.setText("10");

        setFeaturesButton.setText("Set");
        setFeaturesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setFeaturesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(windowSizeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(windowSizeLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(setFeaturesButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(okButton)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(windowSizeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(windowSizeLabel))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(cancelButton)
                    .addComponent(okButton)
                    .addComponent(setFeaturesButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        //System.out.println("KEY PRESSED");
    }//GEN-LAST:event_formKeyPressed
    
    private void menuItemRevertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemRevertActionPerformed
        gridPanel.revert();
    }//GEN-LAST:event_menuItemRevertActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jButton1.getComponentPopupMenu().show(jButton1, 0, 0);
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void menuItemEnableAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemEnableAllActionPerformed
        gridPanel.setAll(true);
    }//GEN-LAST:event_menuItemEnableAllActionPerformed
    
    private void menuItemDisableAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemDisableAllActionPerformed
        gridPanel.setAll(false);
    }//GEN-LAST:event_menuItemDisableAllActionPerformed
    
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        boolean[][] oldConnections = w.getLearningManager().getConnectionMatrix(true);
        boolean[][] c = gridPanel.getConnectionsFromForm();
        w.getDataManager().featureManager.setFeatureWindowSize(windowSize);
        w.getLearningManager().updateInputOutputConnections(c,true);
        KadenzeLogging.getLogger().selectedFeatures(w, oldConnections, c);
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        this.dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    private void windowSizeSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_windowSizeSliderStateChanged
        JSlider source = (JSlider)evt.getSource();
        if (!source.getValueIsAdjusting()) {
            windowSize = (int)source.getValue();
            windowSizeLabel.setText(Integer.toString(windowSize));
        } 
        
    }//GEN-LAST:event_windowSizeSliderStateChanged

    private void setFeaturesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setFeaturesButtonActionPerformed
        // TODO add your handling code here:
        boolean[][] oldConnections = w.getLearningManager().getConnectionMatrix(true);
        boolean[][] c = gridPanel.getConnectionsFromForm();
        w.getDataManager().featureManager.setFeatureWindowSize(windowSize);
        w.getLearningManager().updateInputOutputConnections(c,true);
        KadenzeLogging.getLogger().selectedFeatures(w, oldConnections, c);
    }//GEN-LAST:event_setFeaturesButtonActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JMenuItem menuItemDisableAll;
    private javax.swing.JMenuItem menuItemEnableAll;
    private javax.swing.JMenuItem menuItemRevert;
    private javax.swing.JButton okButton;
    private javax.swing.JPopupMenu popupMenuAction;
    private javax.swing.JScrollPane scrollPanel;
    private javax.swing.JButton setFeaturesButton;
    private javax.swing.JLabel windowSizeLabel;
    private javax.swing.JSlider windowSizeSlider;
    // End of variables declaration//GEN-END:variables


    public class MyToggle extends JToggleButton {

        int x, y;

        public MyToggle(ButtonLocation bl) {
            super();
            this.x = bl.x;
            this.y = bl.y;
            // System.out.println("h");
            setMinimumSize(new Dimension(40, 40));
            setMaximumSize(new Dimension(40, 40));
            setPreferredSize(new Dimension(40, 40));
            setSize(new Dimension(40, 40));
            //setMaximumSize(new Dimension(80, 80)); //Doesn't seem to work
            this.addActionListener(new ActionListener() {

                @Override
                public void actionPerformed(ActionEvent e) {
                    // System.out.println("BUTTON CHANGE");
                }
            });

            this.getModel().addActionListener(new ActionListener() {

                @Override
                public void actionPerformed(ActionEvent e) {
                    // System.out.println("MODEL CHANGE");
                    if (isSelected()) {

                        setText("X");
                    } else {
                        setText("");
                    }

                }

            });
        }

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            // System.out.println("H");
        }

        @Override
        public void setSelected(boolean s) {
            this.getModel().setSelected(s);
            if (s) {
                setText("X");
            } else {
                setText("");
            }
        }

    }

    public class ButtonLocation {

        public int x;
        public int y;

        public ButtonLocation(int x, int y) {
            this.x = x;
            this.y = y;
        }
    }

    //doesn't really work
    //See http://stackoverflow.com/questions/14777926/java-how-to-make-a-jlabel-with-vertical-text
    public class JVertLabel extends JComponent {

        private String text;

        public JVertLabel(String s) {
            text = s;
        }

        public void paintComponent(Graphics g) {
            super.paintComponent(g);
            Graphics2D g2d = (Graphics2D) g;

            g2d.rotate(Math.toRadians(270.0));
            g2d.drawString(text, 0, 0);
        }
    }

    public interface ConnectionsListener {

        public void notify(boolean[][] connections);
    }

}
